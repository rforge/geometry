
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(geometry)
> x <- c(-1, -1, 1)
> y <- c(-1, 1, -1)
> p <- cbind(x, y)
> tri <- matrix(c(1, 2, 3), 1, 3)
> # Should be in triangle #1
> tsearchn(p, tri, cbind(-1, -1),fast=FALSE)
$idx
[1] 1

$p
     [,1] [,2] [,3]
[1,]    1    0    0

> # Should be in triangle #1
> tsearchn(p, tri, cbind(1, -1), fast=FALSE)
$idx
[1] 1

$p
     [,1] [,2] [,3]
[1,]    0    0    1

> # Should be in triangle #1
> tsearchn(p, tri, cbind(-1, 1), fast=FALSE)
$idx
[1] 1

$p
     [,1] [,2] [,3]
[1,]    0    1    0

> # Should be in triangle #1
> tsearchn(p, tri, cbind(-1/3, -1/3), fast=FALSE)
$idx
[1] 1

$p
          [,1]      [,2]      [,3]
[1,] 0.3333333 0.3333333 0.3333333

> # Should be outside triangle #1, so should return NA
> tsearchn(p, tri, cbind(1, 1), fast=FALSE)
$idx
[1] NA

$p
     [,1] [,2] [,3]
[1,]   NA   NA   NA

> 
> 
